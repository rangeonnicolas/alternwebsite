# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-10-27 15:46
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Alternative',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Behaviour',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label_en', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_leaf', models.BooleanField()),
                ('name', models.CharField(max_length=500)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EntityThatHaveProperties',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_level', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label_en', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Relation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TestAlternative',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foo', models.BooleanField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TestBehaviour',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TestCountry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label_en', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TestEntity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_leaf', models.BooleanField()),
                ('name', models.CharField(max_length=500)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TestEntityThatHaveProperties',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_level', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TestLanguage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label_en', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TestRelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TestTopic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description_en', models.TextField(null=True)),
                ('in_navigation_bar', models.BooleanField(default=False, verbose_name='appears in main menu')),
                ('position_in_nav_bar', models.IntegerField()),
                ('_slug', models.SlugField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description_en', models.TextField(null=True)),
                ('in_navigation_bar', models.BooleanField(default=False, verbose_name='appears in main menu')),
                ('position_in_nav_bar', models.IntegerField()),
                ('_slug', models.SlugField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Association',
            fields=[
                ('entity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core_model.Entity')),
                ('description', models.TextField(default='')),
                ('country', models.ManyToManyField(to='core_model.Country')),
                ('lang', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core_model.Language')),
            ],
            options={
                'abstract': False,
            },
            bases=('core_model.entity',),
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('entity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core_model.Entity')),
            ],
            options={
                'abstract': False,
            },
            bases=('core_model.entity',),
        ),
        migrations.CreateModel(
            name='Habit',
            fields=[
                ('behaviour_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core_model.Behaviour')),
                ('label_en', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
            bases=('core_model.behaviour',),
        ),
        migrations.CreateModel(
            name='OtherBehaviour',
            fields=[
                ('behaviour_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core_model.Behaviour')),
                ('title_en', models.CharField(max_length=255)),
                ('description_en', models.TextField()),
            ],
            options={
                'abstract': False,
            },
            bases=('core_model.behaviour',),
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('entity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core_model.Entity')),
            ],
            options={
                'abstract': False,
            },
            bases=('core_model.entity',),
        ),
        migrations.CreateModel(
            name='TestAssociation',
            fields=[
                ('testentity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core_model.TestEntity')),
                ('description', models.TextField(default='')),
                ('country', models.ManyToManyField(to='core_model.TestCountry')),
                ('lang', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core_model.TestLanguage')),
            ],
            options={
                'abstract': False,
            },
            bases=('core_model.testentity',),
        ),
        migrations.CreateModel(
            name='TestCompany',
            fields=[
                ('testentity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core_model.TestEntity')),
            ],
            options={
                'abstract': False,
            },
            bases=('core_model.testentity',),
        ),
        migrations.CreateModel(
            name='TestHabit',
            fields=[
                ('testbehaviour_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core_model.TestBehaviour')),
                ('label_en', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
            bases=('core_model.testbehaviour',),
        ),
        migrations.CreateModel(
            name='TestOtherBehaviour',
            fields=[
                ('testbehaviour_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core_model.TestBehaviour')),
                ('title_en', models.CharField(max_length=255)),
                ('description_en', models.TextField()),
            ],
            options={
                'abstract': False,
            },
            bases=('core_model.testbehaviour',),
        ),
        migrations.CreateModel(
            name='TestProduct',
            fields=[
                ('testentity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core_model.TestEntity')),
            ],
            options={
                'abstract': False,
            },
            bases=('core_model.testentity',),
        ),
        migrations.CreateModel(
            name='TestUseAKindOfEntity',
            fields=[
                ('testbehaviour_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core_model.TestBehaviour')),
            ],
            options={
                'abstract': False,
            },
            bases=('core_model.testbehaviour',),
        ),
        migrations.CreateModel(
            name='UseAKindOfEntity',
            fields=[
                ('behaviour_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core_model.Behaviour')),
            ],
            options={
                'abstract': False,
            },
            bases=('core_model.behaviour',),
        ),
        migrations.AddField(
            model_name='testrelation',
            name='from_entity',
            field=models.ManyToManyField(related_name='to_relations', to='core_model.TestEntity'),
        ),
        migrations.AddField(
            model_name='testrelation',
            name='to_entity',
            field=models.ManyToManyField(related_name='from_relations', to='core_model.TestEntity'),
        ),
        migrations.AddField(
            model_name='testentitythathaveproperties',
            name='properties',
            field=models.ManyToManyField(blank=True, to='core_model.TestRelation'),
        ),
        migrations.AddField(
            model_name='testentitythathaveproperties',
            name='target_entity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ethp', to='core_model.TestEntity'),
        ),
        migrations.AddField(
            model_name='testentity',
            name='parents',
            field=models.ManyToManyField(blank=True, related_name='children', to='core_model.TestEntity'),
        ),
        migrations.AddField(
            model_name='testalternative',
            name='from_behaviours',
            field=models.ManyToManyField(blank=True, related_name='alternatives', to='core_model.TestBehaviour'),
        ),
        migrations.AddField(
            model_name='testalternative',
            name='to_behaviour',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='is_alternative_to', to='core_model.TestBehaviour'),
        ),
        migrations.AddField(
            model_name='testalternative',
            name='topics',
            field=models.ManyToManyField(to='core_model.TestTopic'),
        ),
        migrations.AddField(
            model_name='relation',
            name='from_entity',
            field=models.ManyToManyField(related_name='to_relations', to='core_model.Entity'),
        ),
        migrations.AddField(
            model_name='relation',
            name='to_entity',
            field=models.ManyToManyField(related_name='from_relations', to='core_model.Entity'),
        ),
        migrations.AddField(
            model_name='entitythathaveproperties',
            name='properties',
            field=models.ManyToManyField(to='core_model.Relation'),
        ),
        migrations.AddField(
            model_name='entitythathaveproperties',
            name='target_entity',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ethp', to='core_model.Entity'),
        ),
        migrations.AddField(
            model_name='entity',
            name='parents',
            field=models.ManyToManyField(related_name='children', to='core_model.Entity'),
        ),
        migrations.AddField(
            model_name='alternative',
            name='from_behaviours',
            field=models.ManyToManyField(related_name='alternatives', to='core_model.Behaviour'),
        ),
        migrations.AddField(
            model_name='alternative',
            name='to_behaviour',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='is_alternative_to', to='core_model.Behaviour'),
        ),
        migrations.AddField(
            model_name='alternative',
            name='topics',
            field=models.ManyToManyField(to='core_model.Topic'),
        ),
        migrations.AddField(
            model_name='useakindofentity',
            name='entity_with_properties',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_model.EntityThatHaveProperties'),
        ),
        migrations.AddField(
            model_name='testuseakindofentity',
            name='entity_with_properties',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core_model.TestEntityThatHaveProperties'),
        ),
    ]
